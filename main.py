import matching
from profiles import add_profile, get_profile, update_profile, remove_profile, profile_as_text
from profiles import Profile, Child, Sex
import profiles
from matching import get_next_candidate, like_candidate, skip_candidate, reject_candidate

from psycho_test_results import add_psycho_test, get_psycho_test, update_psycho_test, remove_psycho_test, get_result_message
from psycho_test_results import MALE_QUESTIONS, FEMALE_QUESTIONS, PsychoTestResult
import psycho_test_results

import cities

import telebot
import os
import re
from dotenv import load_dotenv
from telebot import types

load_dotenv()

bot = telebot.TeleBot(os.getenv('BOT_TOKEN'))

welcome_message = ('''–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ PAIRENTS!

Pairents - —ç—Ç–æ —Å–µ—Ä–≤–∏—Å –¥–ª—è –¥—Ä—É–∂–µ—Å–∫–æ–≥–æ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ –º–æ–ª–æ–¥—ã—Ö —Ä–æ–¥–∏—Ç–µ–ª–µ–π c —Å–∏—Å—Ç–µ–º–æ–π –º—ç—Ç—á–∏–Ω–≥–∞, –∫–æ—Ç–æ—Ä–∞—è –æ—Å–Ω–æ–≤—ã–≤–≤–∞–µ—Ç—Å—è –Ω–∞ —Å—Ö–æ–∂–∏—Ö –≤–∑–≥–ª—è–¥–∞—Ö –Ω–∞ –≤–æ—Å–ø–∏—Ç–∞–Ω–∏–µ –¥–µ—Ç–µ–π!

–î–µ—Ç–∏ - —ç—Ç–æ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ, –æ–¥–Ω–∞–∫–æ –≤—Å–µ –º—ã –ª—é–¥–∏ –∏ —Å—Ç–∞–ª–∫–∏–≤–∞–µ–º—Å—è —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —Ç—Ä—É–¥–Ω–µ–æ—Å—Ç—è–º–∏ –Ω–∞ —ç—Ç–æ–º –ø—É—Ç–∏. Pairents - —ç—Ç–æ –Ω–µ —Ç–æ–ª—å–∫–æ –ø—Ä–æ –¥—Ä—É–∂–µ—Å–∫–∏–π –¥–µ–π—Ç–∏–Ω–≥, –Ω–æ –∏ –ø—Ä–æ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–µ–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ —Ä–æ–¥–∏—Ç–µ—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –≥–æ—Ç–æ–≤—ã –ø—Ä–∏–π—Ç–∏ –Ω–∞ –ø–æ–º–æ—á—å –≤ —Ç—Ä—É–¥–Ω—É—é –º–∏–Ω—É—Ç—É, –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –º–æ—Ä–∞–ª—å–Ω–æ –∏ —Ñ–∏–∑–∏—á–µ—Å–∫–∏.

–í –±–æ—Ç–µ –¥–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:
/help - –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
/start - –Ω–∞—á–∞—Ç—å —Å –Ω–∞—á–∞–ª–∞
/create_profile - —Å–æ–∑–¥–∞—Ç—å –∏–ª–∏ –æ–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å
/view_profile - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å
/delete_profile - —É–¥–∞–ª–∏—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å
/search - –Ω–∞—á–∞—Ç—å –ø–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–≤

–í–æ–∑—Ä–∞—Å—Ç–Ω–æ–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞: 16+.

–°–µ–π—á–∞—Å —Å–µ—Ä–≤–∏—Å —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ 16 –≥–æ—Ä–æ–¥–∞—Ö –†–æ—Å—Å–∏–∏: –ú–æ—Å–∫–≤–∞, –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥, –ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫, –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥, –ö–∞–∑–∞–Ω—å, –ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫, –ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥, –ß–µ–ª—è–±–∏–Ω—Å–∫, –°–∞–º–∞—Ä–∞, –£—Ñ–∞, –†–æ—Å—Ç–æ–≤-–Ω–∞-–î–æ–Ω—É, –ö—Ä–∞—Å–Ω–æ–¥–∞—Ä, –û–º—Å–∫, –í–æ—Ä–æ–Ω–µ–∂, –ü–µ—Ä–º—å, –í–æ–ª–≥–æ–≥—Ä–∞–¥.
    
–ö–æ–º–∞–Ω–¥–∞ Pairents –≤—Å–µ–≥–¥–∞ —Ä–∞–¥–∞ –∏ –æ—Ç–∫—Ä—ã—Ç–∞ –∫ –Ω–æ–≤—ã–º –∏–¥–µ—è–º –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º. –ï—Å–ª–∏ –í—ã –æ–±–Ω–∞—Ä—É–∂–∏–ª–∏ –æ—à–∏–±–∫—É –≤ —Ä–∞–±–æ—Ç–µ —Å–µ—Ä–≤–∏—Å–∞, –∏–ª–∏ –í–∞—à–µ–≥–æ –≥–æ—Ä–æ–¥–∞ –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ, –∏ –ø–æ –ª—é–±—ã–º –¥—Ä—É–≥–∏–º –≤–æ–ø—Ä–æ—Å–∞–º –º–æ–∂–Ω–æ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –≠—Ä–∏–∫–µ @ekhuf.

–ù–∞–¥–µ–µ–º—Å—è, —á—Ç–æ –Ω–∞—à —Å–µ—Ä–≤–∏—Å —Å—Ç–∞–Ω–µ—Ç –ø–æ–º–æ—â–Ω–∏–∫–æ–º –¥–ª—è –í–∞—Å, –∞ –í—ã –Ω–∞–π–¥–µ—Ç–µ –∑–¥–µ—Å—å —á—É—Ç–∫–∏—Ö –∏ –ø–æ–Ω–∏–º–∞—é—â–∏—Ö –¥—Ä—É–∑–µ–π.

–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å.''')


def is_valid_name(name: str) -> bool:
    if not name:
        return False

    if not name[0].isupper():
        return False

    russian_pattern = r'^[–ê-–Ø–Å–∞-—è—ë\- ]+$'
    english_pattern = r'^[A-Za-z\- ]+$'

    if re.match(russian_pattern, name):
        return True
    elif re.match(english_pattern, name):
        return True
    else:
        return False


# —Ä–µ–∞–∫—Ü–∏—è –±–æ—Ç–∞ –Ω–∞ –∫–æ–º–∞–Ω–¥—É \start
@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)  # —Å–æ–∑–¥–∞–µ—Ç —Å–µ—Ç–∫—É –¥–ª—è –∫–Ω–æ–ø–æ–∫
    btn1 = types.KeyboardButton("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å")  # –∫–∞–∫–∞—è –∫–Ω–æ–ø–∫–∞ –±—É–¥–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    markup.add(btn1)
    bot.send_message(message.from_user.id, welcome_message, reply_markup=markup)


@bot.message_handler(commands=['search'])
def search(message):
    user_id = message.chat.id
    candidate_id = get_next_candidate(user_id)
    if candidate_id is None:
        bot.send_message(user_id, "–ü–æ–∫–∞ –Ω–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –∞–Ω–∫–µ—Ç. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.")
        return

    candidate = get_profile(candidate_id)

    if candidate is None:
        bot.send_message(user_id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ mistake & misunderstanding. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.")
        return

    keyboard = telebot.types.InlineKeyboardMarkup()
    keyboard.add(
        telebot.types.InlineKeyboardButton("‚ù§Ô∏è", callback_data=f"like_{candidate_id}"),
        telebot.types.InlineKeyboardButton("ü§î –û—Ç–ª–æ–∂–∏—Ç—å", callback_data=f"skip_{candidate_id}"),
        telebot.types.InlineKeyboardButton("‚ùå", callback_data=f"reject_{candidate_id}")
    )

    response, photo = profile_as_text(candidate)

    if photo:
        bot.send_photo(user_id, photo, caption=response, reply_markup=keyboard)
    else:
        response += "–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞."
        bot.send_message(user_id, response, reply_markup=keyboard)


@bot.callback_query_handler(func=lambda call: call.data.startswith(('like_', 'skip_', 'reject_')))
def callback_handler(call):
    user_id = call.from_user.id
    action, target_id = call.data.split('_')
    target_id = int(target_id)

    if action == 'like':
        like_candidate(user_id, target_id, bot)
        bot.answer_callback_query(call.id, "–ò–Ω—Ç–µ—Ä–µ—Å –ø—Ä–æ—è–≤–ª–µ–Ω!")
    elif action == 'skip':
        skip_candidate(user_id, target_id)
        bot.answer_callback_query(call.id, "–ê–Ω–∫–µ—Ç–∞ –ø—Ä–æ–ø—É—â–µ–Ω–∞.")
    elif action == 'reject':
        reject_candidate(user_id, target_id)
        bot.answer_callback_query(call.id, "–ê–Ω–∫–µ—Ç–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.")

    search(call.message)


@bot.message_handler(commands=['help'])
def send_help(message):
    help_message = "–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:\n" \
                   "/start - –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞:\n" \
                   "/help - –ø–æ–∫–∞–∑–∞—Ç—å –¥–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n" \
                   "/create_profile - —Å–æ–∑–¥–∞—Ç—å –∏–ª–∏ –æ–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å\n" \
                   "/view_profile - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å\n" \
                   "/delete_profile - —É–¥–∞–ª–∏—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å\n" \
                   "/search - –Ω–∞—á–∞—Ç—å –ø–æ–∏—Å–∫"
    bot.send_message(message.chat.id, help_message)


# @bot.message_handler(commands=['photo_id'])
# def send_help(message):
#     bot.send_message(message.chat.id, "–ü—Ä–∏—à–ª–∏ —Ñ–æ—Ç–æ")
#     bot.register_next_step_handler(message, send_file_id)
#
# def send_file_id(message):
#     bot.send_message(message.chat.id, message.photo[-1].file_id)

@bot.message_handler(commands=['view_profile'])
def view_profile(message):
    tg_id = message.chat.id
    profile = get_profile(tg_id)
    if profile:
        response, photo = profile_as_text(profile)
        if photo:
            bot.send_photo(tg_id, photo, caption=response)
        else:
            response += "–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞."
            bot.send_message(tg_id, response)
    else:
        bot.send_message(tg_id,
                         "–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ—Ñ–∏–ª—å —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /create_profile.")


@bot.message_handler(commands=['create_profile'])
def create_profile(message):
    tg_id = message.chat.id
    profile = get_profile(tg_id)
    if not profile:
        profile = Profile()
        add_profile(tg_id, profile)
    bot.send_message(tg_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:", reply_markup=telebot.types.ReplyKeyboardRemove())
    bot.register_next_step_handler(message, process_name_step, profile)


@bot.message_handler(commands=['delete_profile'])
def delete_profile(message):
    tg_id = message.chat.id
    profile = get_profile(tg_id)
    if profile:
        remove_profile(tg_id)
        remove_psycho_test(tg_id)
        bot.send_message(tg_id, "–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω.")
    else:
        bot.send_message(tg_id, "–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.")


@bot.message_handler(content_types=['text'])
def get_text_messages(message):
    if message.text == '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)  # —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫
        btn1 = types.KeyboardButton('–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É')
        btn2 = types.KeyboardButton('–£ –º–µ–Ω—è —É–∂–µ –µ—Å—Ç—å –∞–Ω–∫–µ—Ç–∞')
        # btn3 = types.KeyboardButton('–°–æ–≤–µ—Ç—ã –ø–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—é –ø—É–±–ª–∏–∫–∞—Ü–∏–∏')
        # markup.add(btn1, btn2, btn3)
        markup.add(btn1, btn2)
        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω–æ–µ. –ï—Å–ª–∏ —É –≤–∞—Å —É–∂–µ –±—ã–ª–∞ –∞–Ω–∫–µ—Ç–∞, –Ω–æ –≤—ã –Ω–∞–∂–º–µ—Ç–µ "–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É" - —Å—Ç–∞—Ä–∞—è –∞–Ω–∫–µ—Ç–∞ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–∞', reply_markup=markup)  # –æ—Ç–≤–µ—Ç –±–æ—Ç–∞

    if message.text == '–ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É':
        create_profile(message)

    if message.text == '–£ –º–µ–Ω—è —É–∂–µ –µ—Å—Ç—å –∞–Ω–∫–µ—Ç–∞':
        if get_profile(message.chat.id) is None:
            bot.send_message(message.chat.id, '–ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –í–∞–º –Ω—É–∂–Ω–æ —Å–Ω–∞—á–∞–ª–∞ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É')
            create_profile(message)
        else:
            bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /search, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–≤', reply_markup=telebot.types.ReplyKeyboardRemove())


def process_name_step(message, profile):
    name = message.text
    if not is_valid_name(name):
        response = """–ò–º—è –¥–æ–ª–∂–Ω–æ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å –∑–∞–≥–ª–∞–≤–Ω–æ–π –±—É–∫–≤—ã. –ë—É–∫–≤—ã –∏–º–µ–Ω–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∏–ª–∏ –≤—Å–µ —Ä—É—Å—Å–∫–∏–º–∏, –∏–ª–∏ –≤—Å–µ –∞–Ω–≥–ª–∏–π—Å–∫–∏–º–∏. –†–∞–∑—Ä–µ—à–µ–Ω—ã –∑–Ω–∞–∫–∏ –ø—Ä–æ–±–µ–ª–∞ –∏ –¥–µ—Ñ–∏—Å–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–µ –∏–º—è –µ—â–µ —Ä–∞–∑ –≤ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ. 

–ï—Å–ª–∏ –í—ã —Å—á–∏—Ç–∞–µ—Ç–µ, —á—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –≠—Ä–∏–∫–µ @ekhuf"""
        bot.send_message(message.chat.id, response)
        bot.register_next_step_handler(message, process_name_step, profile)
        return
    profile.name = name
    bot.send_message(message.chat.id, "–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à—É —Ñ–∞–º–∏–ª–∏—é:")
    bot.register_next_step_handler(message, process_surname_step, profile)


def process_surname_step(message, profile):
    surname = message.text
    if not is_valid_name(surname):
        response = """–§–∞–º–∏–ª–∏—è –¥–æ–ª–∂–Ω–∞ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å –∑–∞–≥–ª–∞–≤–Ω–æ–π –±—É–∫–≤—ã. –ë—É–∫–≤—ã –∏–º–µ–Ω–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∏–ª–∏ –≤—Å–µ —Ä—É—Å—Å–∫–∏–º–∏, –∏–ª–∏ –≤—Å–µ –∞–Ω–≥–ª–∏–π—Å–∫–∏–º–∏. –†–∞–∑—Ä–µ—à–µ–Ω—ã –∑–Ω–∞–∫–∏ –ø—Ä–æ–±–µ–ª–∞ –∏ –¥–µ—Ñ–∏—Å–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ—é —Ñ–∞–º–∏–ª–∏—é –µ—â–µ —Ä–∞–∑ –≤ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ. 

–ï—Å–ª–∏ –í—ã —Å—á–∏—Ç–∞–µ—Ç–µ, —á—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –≠—Ä–∏–∫–µ @ekhuf"""
        bot.send_message(message.chat.id, response)
        bot.register_next_step_handler(message, process_surname_step, profile)
        return
    profile.surname = surname
    keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('–ú—É–∂—Å–∫–æ–π', '–ñ–µ–Ω—Å–∫–∏–π')
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à –ø–æ–ª:", reply_markup=keyboard)
    bot.register_next_step_handler(message, process_sex_step, profile)


def process_sex_step(message, profile):
    profile.sex = Sex.MALE if message.text == '–ú—É–∂—Å–∫–æ–π' else Sex.FEMALE if message.text == '–ñ–µ–Ω—Å–∫–∏–π' else None
    if profile.sex is None:
        keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.row('–ú—É–∂—Å–∫–æ–π', '–ñ–µ–Ω—Å–∫–∏–π')
        bot.send_message(message.chat.id, "–ü–æ–ª –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω. –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à –ø–æ–ª –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö:", reply_markup=keyboard)
        bot.register_next_step_handler(message, process_sex_step, profile)
        return
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ, —Å–∫–æ–ª—å–∫–æ –í–∞–º –ø–æ–ª–Ω—ã—Ö –ª–µ—Ç:", reply_markup=telebot.types.ReplyKeyboardRemove())
    bot.register_next_step_handler(message, process_age_step, profile)


def process_age_step(message, profile):
    if not message.text.isdigit():
        bot.send_message(message.chat.id, "–í–æ–∑—Ä–∞—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ü–µ–ª—ã–º –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º. –ü–æ–≤—Ç–æ—Ä–Ω–æ –≤–≤–µ–¥–∏—Ç–µ, —Å–∫–æ–ª—å–∫–æ –í–∞–º –ø–æ–ª–Ω—ã—Ö –ª–µ—Ç:")
        bot.register_next_step_handler(message, process_age_step, profile)
        return
    profile.age = int(message.text)
    if profile.age < 16:
        bot.send_message(message.chat.id, "–ù–∞—à —Å–µ—Ä–≤–∏—Å 16+. –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –ø—Ä–∞–≤–¥–∏–≤—ã–π –≤–æ–∑—Ä–∞—Å—Ç.")
        bot.register_next_step_handler(message, process_age_step, profile)
        return
    bot.send_message(message.chat.id, '''–í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥ –í–∞—à–µ–≥–æ –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è

–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Å–µ—Ä–≤–∏—Å —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –≥–æ—Ä–æ–¥–∞—Ö:
–ú–æ—Å–∫–≤–∞
–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥
–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫
–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥
–ö–∞–∑–∞–Ω—å
–ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫
–ù–∏–∂–Ω–∏–π –ù–æ–≤–≥–æ—Ä–æ–¥
–ß–µ–ª—è–±–∏–Ω—Å–∫
–°–∞–º–∞—Ä–∞
–£—Ñ–∞
–†–æ—Å—Ç–æ–≤-–Ω–∞-–î–æ–Ω—É
–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä
–û–º—Å–∫
–í–æ—Ä–æ–Ω–µ–∂
–ü–µ—Ä–º—å
–í–æ–ª–≥–æ–≥—Ä–∞–¥

–ï—Å–ª–∏ –í–∞—à–µ–≥–æ –≥–æ—Ä–æ–¥–∞ –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ - –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –≠—Ä–∏–∫–æ–π @ekhuf''')
    bot.register_next_step_handler(message, process_city_step, profile)


def process_city_step(message, profile):
    if message.text not in cities.all_cities.keys():
        bot.send_message(message.chat.id, '''–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –∏–ª–∏ —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –≠—Ä–∏–∫–æ–π @ekhuf, –µ—Å–ª–∏ –í–∞—à–µ–≥–æ –≥–æ—Ä–æ–¥–∞ –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ:

–ú–æ—Å–∫–≤–∞
–°–∞–Ω–∫—Ç - –ü–µ—Ç–µ—Ä–±—É—Ä–≥
–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫
–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥
–ö–∞–∑–∞–Ω—å
–ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫
–ù–∏–∂–Ω–∏–π
–ù–æ–≤–≥–æ—Ä–æ–¥
–ß–µ–ª—è–±–∏–Ω—Å–∫
–°–∞–º–∞—Ä–∞
–£—Ñ–∞
–†–æ—Å—Ç–æ–≤ - –Ω–∞ - –î–æ–Ω—É
–ö—Ä–∞—Å–Ω–æ–¥–∞—Ä
–û–º—Å–∫
–í–æ—Ä–æ–Ω–µ–∂
–ü–µ—Ä–º—å
–í–æ–ª–≥–æ–≥—Ä–∞–¥''')
        bot.register_next_step_handler(message, process_city_step, profile)
        return
    profile.city = message.text
    if profile.city in cities.russian_cities_with_subway.keys():
        request = "–í–≤–µ–¥–∏—Ç–µ –±–ª–∏–∂–∞–π—à—É—é –∫ –í–∞—à–µ–º—É –¥–æ–º—É —Å—Ç–∞–Ω—Ü–∏—é –º–µ—Ç—Ä–æ/–ú–¶–î/–ë–ö–õ/–ú–¶–ö."
    else:
        request = "–í–≤–µ–¥–∏—Ç–µ —Ä–∞–π–æ–Ω, –≤ –∫–æ—Ç–æ—Ä–æ–º –í—ã –ø—Ä–æ–∂–∏–≤–∞–µ—Ç–µ."
    bot.send_message(message.chat.id, request)
    bot.register_next_step_handler(message, process_district_step, profile)


def process_district_step(message, profile):
    if message.text not in cities.all_cities[profile.city].keys():
        city_district_type = "–º–µ—Ç—Ä–æ" if profile.city in cities.russian_cities_with_subway.keys() else "—Ä–∞–π–æ–Ω–∞"
        bot.send_message(message.chat.id, f"–ù–µ –Ω–∞—à–ª–∏ —Ç–∞–∫–æ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö, —É–±–µ–¥–∏—Ç–µ—Å—å –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ –Ω–∞–ø–∏—Å–∞–Ω–∏—è {city_district_type}. –ï—Å–ª–∏ –≤—Å–µ –≤–µ—Ä–Ω–æ, –Ω–æ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–∏–ª–∞—Å—å –≤–Ω–æ–≤—å - –≤–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ {city_district_type} —Ä—è–¥–æ–º.")
        bot.register_next_step_handler(message, process_district_step, profile)
        return
    profile.district = message.text
    bot.send_message(message.chat.id, "–ó–∞–≥—Ä—É–∑–∏—Ç–µ –≤–∞—à—É —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é. –ë—É–¥–µ—Ç –∑–¥–æ—Ä–æ–≤–æ, –µ—Å–ª–∏ —ç—Ç–æ –±—É–¥–µ—Ç —Å–µ–º–µ–π–Ω–æ–µ —Ñ–æ—Ç–æ:")
    bot.register_next_step_handler(message, process_photo_step, profile)


def process_photo_step(message, profile):
    if message.photo:
        profile.photo = message.photo[-1].file_id
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ—Ç–µ–π:")
        bot.register_next_step_handler(message, process_num_of_children_step, profile)
    else:
        bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
        bot.register_next_step_handler(message, process_photo_step, profile)


def process_num_of_children_step(message, profile):
    if not message.text.isdigit():
        bot.send_message(message.chat.id, "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ—Ç–µ–π –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ–º. –í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–µ—Ç–µ–π –≤ —Ñ–æ—Ä–º–∞—Ç–µ —á–∏—Å–ª–∞:")
        bot.register_next_step_handler(message, process_num_of_children_step, profile)
        return
    profile.num_of_children = int(message.text)
    if profile.num_of_children > 0:
        bot.send_message(message.chat.id, f"–í–≤–µ–¥–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ {1}-–º —Ä–µ–±–µ–Ω–∫–µ:")
        bot.send_message(message.chat.id, "–ò–º—è —Ä–µ–±–µ–Ω–∫–∞:")
        bot.register_next_step_handler(message, process_child_info_step, profile)
    else:
        profile.children.clear()
        update_profile(message.chat.id, profile)
        bot.send_message(message.chat.id, "–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω!")
        fill_psycho_test(message, profile.sex)


def process_child_info_step(message, profile):
    child = Child()
    name = message.text
    if not is_valid_name(name):
        response = """–ò–º—è –¥–æ–ª–∂–Ω–æ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å –∑–∞–≥–ª–∞–≤–Ω–æ–π –±—É–∫–≤—ã. –ë—É–∫–≤—ã –∏–º–µ–Ω–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∏–ª–∏ –≤—Å–µ —Ä—É—Å—Å–∫–∏–º–∏, –∏–ª–∏ –≤—Å–µ –∞–Ω–≥–ª–∏–π—Å–∫–∏–º–∏. –†–∞–∑—Ä–µ—à–µ–Ω—ã –∑–Ω–∞–∫–∏ –ø—Ä–æ–±–µ–ª–∞ –∏ –¥–µ—Ñ–∏—Å–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–µ –∏–º—è –µ—â–µ —Ä–∞–∑ –≤ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ. 

    –ï—Å–ª–∏ –í—ã —Å—á–∏—Ç–∞–µ—Ç–µ, —á—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –≠—Ä–∏–∫–µ @ekhuf"""
        bot.send_message(message.chat.id, response)
        bot.register_next_step_handler(message, process_child_info_step, profile)
        return
    child.name = name
    profile.children.append(child)
    keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('–ú—É–∂—Å–∫–æ–π', '–ñ–µ–Ω—Å–∫–∏–π')
    bot.send_message(message.chat.id, "–ü–æ–ª —Ä–µ–±–µ–Ω–∫–∞:", reply_markup=keyboard)
    bot.register_next_step_handler(message, lambda msg, p=profile, c=child: process_child_sex_step(msg, p, c))


def process_child_sex_step(message, profile, child):
    child.sex = Sex.MALE if message.text == '–ú—É–∂—Å–∫–æ–π' else Sex.FEMALE if message.text == '–ñ–µ–Ω—Å–∫–∏–π' else None
    if child.sex is None:
        keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.row('–ú—É–∂—Å–∫–æ–π', '–ñ–µ–Ω—Å–∫–∏–π')
        bot.send_message(message.chat.id, "–ü–æ–ª –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω. –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö:", reply_markup=keyboard)
        bot.register_next_step_handler(message, lambda msg, p=profile, c=child: process_child_sex_step(msg, p, c))
        return
    bot.send_message(message.chat.id, "–í–æ–∑—Ä–∞—Å—Ç —Ä–µ–±–µ–Ω–∫–∞:", reply_markup=telebot.types.ReplyKeyboardRemove())
    bot.register_next_step_handler(message, lambda msg, p=profile, c=child: process_child_age_step(msg, p, c))


def process_child_age_step(message, profile, child):
    if not message.text.isdigit():
        bot.send_message(message.chat.id, "–í–æ–∑—Ä–∞—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º. –í–≤–µ–¥–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ —á–∏—Å–ª–∞:")
        bot.register_next_step_handler(message, lambda msg, p=profile, c=child: process_child_age_step(msg, p, c))
        return
    child.age = int(message.text)
    if child.age >= profile.age:
        bot.send_message(message.chat.id, "–í–∞—à —Ä–µ–±–µ–Ω–æ–∫ —Å—Ç–∞—Ä—à–µ –í–∞—Å? –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç —Ä–µ–±–µ–Ω–∫–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ —á–∏—Å–ª–∞. –ï—Å–ª–∏ –í—ã —Å–æ–≤–µ—Ä—à–∏–ª–∏ –æ—à–∏–±–∫—É –≤ —Å–≤–æ–µ–º –≤–æ–∑—Ä–∞—Å—Ç–µ, –≤–≤–µ–¥–∏—Ç–µ /start –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∞–Ω–∫–µ—Ç—É –∑–∞–Ω–æ–≤–æ")
        bot.register_next_step_handler(message, lambda msg, p=profile, c=child: process_child_age_step(msg, p, c))
        return
    elif child.age >= profile.age - 6:
        bot.send_message(message.chat.id, "–í–æ–∑—Ä–∞—Å—Ç —Ä–µ–±–µ–Ω–∫–∞ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ –±–æ–ª—å—à–æ–π. –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç —Ä–µ–±–µ–Ω–∫–∞. –ï—Å–ª–∏ –í—ã —Å–æ–≤–µ—Ä—à–∏–ª–∏ –æ—à–∏–±–∫—É, –≤–≤–µ–¥–∏—Ç–µ /start –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∞–Ω–∫–µ—Ç—É –∑–∞–Ω–æ–≤–æ")
        bot.register_next_step_handler(message, lambda msg, p=profile, c=child: process_child_age_step(msg, p, c))
        return
    bot.send_message(message.chat.id, "–û–ø–∏—Å–∞–Ω–∏–µ —Ä–µ–±–µ–Ω–∫–∞:")
    bot.register_next_step_handler(message, lambda msg, p=profile, c=child: process_child_description_step(msg, p, c))


def process_child_description_step(message, profile, child):
    child.description = message.text
    current_index = len(profile.children) - 1
    if current_index + 1 < profile.num_of_children:
        next_index = current_index + 1
        bot.send_message(message.chat.id, f"–í–≤–µ–¥–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ {next_index + 1}-–º —Ä–µ–±–µ–Ω–∫–µ:")
        bot.send_message(message.chat.id, "–ò–º—è —Ä–µ–±–µ–Ω–∫–∞:")
        bot.register_next_step_handler(message, process_child_info_step, profile)
    else:
        update_profile(message.chat.id, profile)
        bot.send_message(message.chat.id, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–µ—Ç—è—Ö —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞.")
        bot.send_message(message.chat.id, "–í–∞—à–∏ –ø—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω!")
        fill_psycho_test(message, profile.sex)


def fill_psycho_test(message, sex):
    text = """–¢–µ–ø–µ—Ä—å –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –±—É–¥–µ—Ç –ø—Ä–æ–π—Ç–∏ –Ω–µ–±–æ–ª—å—à–æ–µ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç –í–∞—à –≤–∑–≥–ª—è–¥ –Ω–∞ –≤–æ—Å–ø–∏—Ç–∞–Ω–∏–µ –¥–µ—Ç–µ–π. –û—Ç–≤–µ—á–∞–π—Ç–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –∏—Å–∫—Ä–µ–Ω–Ω–µ.

–í–∞–º –±—É–¥—É—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω—ã –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤ –æ—Ç 1 –¥–æ 5, –≥–¥–µ:
1 - —Ç–æ—á–Ω–æ –Ω–µ—Ç
2 - —Å–∫–æ—Ä–µ–µ –Ω–µ—Ç, —á–µ–º –¥–∞
3 - –∑–∞—Ç—Ä—É–¥–Ω—è—é—Å—å –æ—Ç–≤–µ—Ç–∏—Ç—å
4 - —Å–∫–æ—Ä–µ–µ –¥–∞, —á–µ–º –Ω–µ—Ç
5 - —Ç–æ—á–Ω–æ –¥–∞"""
    bot.send_message(message.chat.id, text)
    tg_id = message.chat.id
    psycho_test = get_psycho_test(tg_id)
    if not psycho_test:
        psycho_test = PsychoTestResult()
        add_psycho_test(tg_id, psycho_test)
    psycho_test.answers.clear()
    keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.row('1', '2', '3', '4', '5')
    if sex == Sex['FEMALE']:
        questions = FEMALE_QUESTIONS
    else:
        questions = MALE_QUESTIONS
    bot.send_message(message.chat.id, questions[len(psycho_test.answers)], reply_markup=keyboard)
    bot.register_next_step_handler(message, get_answer,psycho_test, sex)


def get_answer(message, psycho_test, sex):
    if message.text not in ['1', '2', '3', '4', '5']:
        bot.send_message(message.chat.id, '''–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞:

1 - —Ç–æ—á–Ω–æ –Ω–µ—Ç
2 - —Å–∫–æ—Ä–µ–µ –Ω–µ—Ç, —á–µ–º –¥–∞
3 - –∑–∞—Ç—Ä—É–¥–Ω—è—é—Å—å –æ—Ç–≤–µ—Ç–∏—Ç—å
4 - —Å–∫–æ—Ä–µ–µ –¥–∞, —á–µ–º –Ω–µ—Ç
5 - —Ç–æ—á–Ω–æ –¥–∞''')
        bot.register_next_step_handler(message, get_answer, psycho_test, sex)
        return
    psycho_test.answers.append(int(message.text))
    if len(psycho_test.answers) == len(FEMALE_QUESTIONS):
        psycho_test_result_message = get_result_message(psycho_test.answers, sex)
        big_message = f'''–ë–æ–ª—å—à–æ–µ —Å–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è! 

{psycho_test_result_message}

–ü–æ–¥–±–æ—Ä —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–≤ –æ—Ç—Ç–∞–ª–∫–∏–≤–∞–µ—Ç—Å—è –æ—Ç —Å—Ö–æ–∂–∏—Ö –≤–∑–≥–ª—è–¥–∞—Ö –Ω–∞ –≤–æ—Å–ø–∏—Ç–∞–Ω–∏–µ –¥–µ—Ç–µ–π. –ü—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–¥–µ–ª–∞–µ—Ç –ø–æ–¥–±–æ—Ä –±–æ–ª–µ–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–º.'''
        bot.send_message(message.chat.id, big_message)
        keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.row('—Ç–æ–ª—å–∫–æ –∂–µ–Ω—â–∏–Ω', '—Ç–æ–ª—å–∫–æ –º—É–∂—á–∏–Ω', '–∏ –º—É–∂—á–∏–Ω –∏ –∂–µ–Ω—â–∏–Ω')
        bot.send_message(message.chat.id, "–°–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–≤ –∫–∞–∫–æ–≥–æ –ø–æ–ª–∞ –í—ã –±—ã —Ö–æ—Ç–µ–ª–∏ –Ω–∞–π—Ç–∏?", reply_markup=keyboard)
        bot.register_next_step_handler(message, sex_filter, psycho_test)
    else:
        keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.row('1', '2', '3', '4', '5')
        if sex == Sex['FEMALE']:
            questions = FEMALE_QUESTIONS
        else:
            questions = MALE_QUESTIONS
        bot.send_message(message.chat.id, questions[len(psycho_test.answers)], reply_markup=keyboard)
        bot.register_next_step_handler(message, get_answer, psycho_test, sex)


def sex_filter(message, test):
    if message.text not in ['—Ç–æ–ª—å–∫–æ –∂–µ–Ω—â–∏–Ω', '—Ç–æ–ª—å–∫–æ –º—É–∂—á–∏–Ω', '–∏ –º—É–∂—á–∏–Ω –∏ –∂–µ–Ω—â–∏–Ω']:
        keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        keyboard.row('—Ç–æ–ª—å–∫–æ –∂–µ–Ω—â–∏–Ω', '—Ç–æ–ª—å–∫–æ –º—É–∂—á–∏–Ω', '–∏ –º—É–∂—á–∏–Ω –∏ –∂–µ–Ω—â–∏–Ω')
        bot.send_message(message.chat.id, "–û—Ç–≤–µ—Ç –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω. –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö:", reply_markup=keyboard)
        bot.register_next_step_handler(message, sex_filter, test)
        return
    test.answers.append(message.text)
    update_psycho_test(message.chat.id, test)
    bot.send_message(message.chat.id, '''–•–æ—Ä–æ—à–æ. –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /search –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–∏—Å–∫ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–æ–≤. 

–î–ª—è –ø–æ–∫–∞–∑–∞ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –≤–≤–µ–¥–∏—Ç–µ /help''', reply_markup=telebot.types.ReplyKeyboardRemove())


if __name__ == '__main__':
    profiles.create_database()
    psycho_test_results.create_database()
    matching.create_database()
    bot.polling(none_stop=True)